version: 2.1

executors:
  default:
    docker:
      - image: circleci/rust:latest
    working_directory: ~/app

jobs:
  lint:
    executor:
      name: default
    steps:
      - checkout
      - run:
          name: rustup component add
          command: rustup component add clippy rustfmt
      - run:
          name: fmt
          command: cargo fmt --all -- --check
      - run:
          name: clippy
          command: cargo clippy --all-targets --all-features -- -D warnings

  test:
    parameters:
      rust_version:
        type: string
        default: ""
    executor:
      name: default
    steps:
      - checkout
      - run:
          name: rustup version
          command: rustup --version
      - when:
          condition: << parameters.rust_version >>
          steps:
            - run:
                name: Install & select $rust_version if specified
                command: |
                  rustup install << parameters.rust_version >>
                  rustup override set << parameters.rust_version >>
      - run:
          name: Record build environment to use as cache key
          command: |
            echo $OS_VERSION | tee /tmp/build-dep
            rustc --version | tee /tmp/build-dep
            cat Cargo.lock >> /tmp/build-dep
      - restore_cache:
          key: &cache-key v1-cache-cargo-target-{{ .Environment.CIRCLECI_CACHE_VERSION }}-{{ checksum "/tmp/build-dep" }}
      - run:
          name: build & test
          command: RUST_BACKTRACE=1 cargo test --verbose --all -- --nocapture
      - save_cache:
          key: *cache-key
          paths:
            - ~/.cargo
            - target

test_jobs: &test_jobs
  - lint
  - test:
      name: MSRV (Minimum Supported Rust Version)
      rust_version: 1.40.0
  - test:
      name: Rust Version from `rust-toolchain`

workflows:
  version: 2
  test:
    jobs: *test_jobs
