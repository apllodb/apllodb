name: fuzzing_test

on:
  pull_request:
    types:
      - opened
      - synchronize

# on:
#   schedule:
#     - cron:  '30 6 * * *'  # UTC 6:30

jobs:
  run_fuzz:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apllodb-server/fuzz/
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/install-apllodb-dep
      - name: rustup override set `cat rust-toolchain`
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true

      # https://github.com/actions/cache/blob/master/examples.md#rust---cargo
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - run: cargo install cargo-fuzz

      - name: Download corpus from previous successful workflow
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: fuzzing-test.yml
          path: apllodb-server/fuzz/corpus

      - run: cargo fuzz run random_string_with_session_without_db -- -max_total_time=10  # in seconds

      - name: Archive corpus
        uses: actions/upload-artifact@v2
        with:
          name: corpus
          path: apllodb-server/fuzz/corpus
          if-no-files-found: error

  slack-notify:
    if: failure()
    needs:
      - run_fuzz
    name: workflow notification to slack
    runs-on: ubuntu-latest
    steps:
      - uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ secrets.SLACK_APLLODB_CI_WEBHOOK_URL }}
