name: test

on:
  push:
    branches: [ master ]
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
        matrix:
          rust:
            - ""      # `rust-toolchain`
            - 1.40.0  # MSRV
    steps:
      - uses: actions/checkout@v2

      - name: Install prerequisites
        run: |
          set -xe
          sudo apt update -y
          sudo apt install -y libsqlite3-dev

      # https://github.com/actions-rs/meta/blob/master/recipes/matrix.md
      - name: rustup override set {{ matrix.rust }}
        if: matrix.rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: rustup override set `cat rust-version`
        if: matrix.rust == ''
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true

      # https://github.com/actions/cache/blob/master/examples.md#using-multiple-systems-and-npm-config
      - name: Get running rustc --version
        id: rustc_version
        run: |
          echo "::set-output name=version::$(rustc --version)"
        
      # https://github.com/actions/cache/blob/master/examples.md#rust---cargo
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ steps.rustc_version.outputs.version }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ steps.rustc_version.outputs.version }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ steps.rustc_version.outputs.version }}-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release --all-features
