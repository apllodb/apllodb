name: format_and_lint

on:
  push:
    branches: [ master ]
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  format:
    runs-on: ubuntu-latest
    env:
      REPO: https://${{github.actor}}:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request.head.ref}}
        
      - name: rustup override set `cat rust-toolchain`
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          components: rustfmt

      - name: fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all

      # https://qiita.com/HeRo/items/935d5e268208d411ab5a#%E3%83%97%E3%83%AB%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88%E3%82%92%E3%83%9E%E3%83%BC%E3%82%B8%E3%81%99%E3%82%8B
      - name: commit formatted files and push
        run: |
          git config --global user.email "workflow@example.com"
          git config --global user.name "workflow user"
          git add .
          if git commit -m '(auto commit) cargo readme > README.md' ; then
            # pull before push not to be rejected by the following error.
            #   error: failed to push some refs to '***github.com/darwin-education/apllo.git'
            git pull ${REPO} HEAD:${{github.event.pull_request.head.ref}}
            git push ${REPO} HEAD:${{github.event.pull_request.head.ref}}
          fi

  lint:
    needs: format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: rustup override set `cat rust-toolchain`
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          components: clippy

      # https://github.com/actions/cache/blob/master/examples.md#rust---cargo
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features -- -D warnings
