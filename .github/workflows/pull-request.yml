name: pull_request

on:
  pull_request:
    types:
      - opened
      - synchronize
  workflow_dispatch:

jobs:
  job-matrix:
    name: ${{ matrix.make.name }} (${{ matrix.rust }}; ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        rust:
          - stable
          - 1.48.0  # MSRV
        make:
          - name: format
            task: format
          - name: lint
            task: lint
          - name: check-easy-panic
            task: check-easy-panic
            rust-free: true
          - name: test
            task: build test-cli clean-trash test check-trash
          - name: doc
            task: doc

        # Exclude unnecessary jobs from matrix
        rust-stable-only:
          - ${{ matrix.make.name == 'lint' }}
        rust-stable:
          - ${{ matrix.rust == 'stable' }}
        exclude:
          - rust-stable-only: true
            rust-stable: false

    env:
      RUST_BACKTRACE: full
    steps:
      - uses: actions/checkout@v2

      - name: Install Rust ${{ matrix.rust }}
        if: ${{ ! matrix.rust-free }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          components: rustfmt, clippy
          override: true

      - name: Cache cargo registry
        if: ${{ ! matrix.rust-free }}
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install cargo-make
        env:
          BASE_URL: https://github.com/sagiegurari/cargo-make/releases/download
          CARGO_MAKE_VERSION: 0.32.17
        run: |
          CARGO_MAKE_FILE_BASE=cargo-make-v${CARGO_MAKE_VERSION}-x86_64-unknown-linux-musl
          mkdir -p ${HOME}/.local/bin
          curl -L "${BASE_URL}/${CARGO_MAKE_VERSION}/${CARGO_MAKE_FILE_BASE}.zip" --output /tmp/cargo-make.zip
          unzip /tmp/cargo-make.zip -d /tmp/cargo-make
          mv -f /tmp/cargo-make/${CARGO_MAKE_FILE_BASE}/cargo-make $HOME/.local/bin/cargo-make
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: ${{ matrix.make.name }}
        run: echo ${{ matrix.make.task }} |xargs cargo make 

  # slack-notify:
  #   if: always()
  #   needs:
  #     - format
  #     - lint
  #     - check-easy-panic
  #     - build
  #     - test
  #     - doc
  #   name: workflow notification to slack
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: Gamesight/slack-workflow-status@master
  #       with:
  #         repo_token: ${{ secrets.GITHUB_TOKEN }}
  #         slack_webhook_url: ${{ secrets.SLACK_APLLODB_CI_WEBHOOK_URL }}
