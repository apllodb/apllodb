#![deny(warnings, missing_debug_implementations)]

//! apllodb's storage engine interface.
//!
//! # Installation
//!
//! ```toml
//! [dependencies]
//! apllodb-storage-engine-interface = "0.1"
//! ```
//!
//! # Boundary of Responsibility with Storage Engine
//!
//! A storage engine is an implementation of this interface crate.
//!
//! This crate provides:
//!
//! - Access Methods traits related to:
//!   - apllodb-DDL
//!   - apllodb-DML
//!   - Transaction
//!   - Getting catalog
//! - Traits of records and record iterators.
//! - Catalog data structure with read-only APIs.
//!
//! And a storage engine MUST provide:
//!
//! - Access Methods implementation.
//! - Implementation of records and record iterators.
//! - Ways to materialize tables and records.
//!
//! # Testing support
//!
//! Testing supports are available with `"test-support"` feature.
//!
//! ```toml
//! [dependencies]
//! apllodb-storage-engine-interface = {version = "...", features = ["test-support"]}
//! ```
//!
//! List of features for testing:
//!
//! - `MockStorageEngine`, `Mock*Methods` (access methods mock) structs generated by [mockall](https://docs.rs/mockall/).
//! - Models and fixtures.
//!
//! See [test_support module level doc](crate::test_support) for detail.

mod access_methods;
mod projection_query;
mod rows;

pub use access_methods::{
    with_db_methods::WithDbMethods, with_tx_methods::WithTxMethods,
    without_db_methods::WithoutDbMethods,
};
pub use projection_query::ProjectionQuery;
pub use rows::Rows;

#[cfg(any(test, feature = "test-support"))]
pub mod test_support;

#[cfg(feature = "test-support")]
use mockall::automock;

#[cfg(feature = "test-support")]
use access_methods::{
    with_db_methods::MockWithDbMethods, with_tx_methods::MockWithTxMethods,
    without_db_methods::MockWithoutDbMethods,
};

/// Storage engine interface.
#[cfg_attr(
    feature = "test-support", 
    automock(
        type WithoutDb = MockWithoutDbMethods;
        type WithDb = MockWithDbMethods;
        type WithTx = MockWithTxMethods;
    )
)]
pub trait StorageEngine {
    /// Access methods that take [SessionWithoutDb](apllodb-shared-components::SessionWithoutDb).
    type WithoutDb: WithoutDbMethods;

    /// Access methods that take [SessionWithDb](apllodb-shared-components::SessionWithDb).
    type WithDb: WithDbMethods;

    /// Access methods that take [SessionWithTx](apllodb-shared-components::SessionWithTx).
    type WithTx: WithTxMethods;

    fn without_db(&self) -> Self::WithoutDb;

    fn with_db(&self) -> Self::WithDb;

    fn with_tx(&self) -> Self::WithTx;
}

#[cfg(test)]
mod tests {
    use apllodb_test_support::setup::setup_test_logger;
    use ctor::ctor;

    #[cfg_attr(test, ctor)]
    fn test_setup() {
        setup_test_logger();
    }
}
